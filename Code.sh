# Adding channels to conda configuration to ensure packages are found from these repositories
conda config --add channels conda-forge 
conda config --add channels bioconda  
conda config --add channels r  

# Creating a new conda environment for running Prokka
conda create -n prokka_env  
conda activate prokka_env 

# Install Prokka in 'prokka_env' from specified channels
conda install -c conda-forge -c bioconda -c defaults prokka

# Install additional Python libraries using pip in the 'prokka_env' environment
pip install numpy 
pip install matplotlib  
pip install seaborn 
pip install pandas
pip install biopython 
conda deactivate

# Creating a new conda environment for running Roary
conda create -n roary_env 
conda activate roary_env  

# Install Roary in 'roary_env' from the bioconda channel
conda install -c bioconda roary

# Install a specific version of Roary from a label within bioconda channel
conda install -c "bioconda/label/cf201901" roary
conda deactivate 

# Activate 'prokka_env' to run Prokka on multiple FASTA files
conda activate prokka_env
for F in name_of_folder/*.fasta; do  
  N=$(basename $F .fasta)
  # Run Prokka annotation, setting locustag, output directory, and prefix based on the file name
  prokka --locustag $N --outdir $N --prefix $N  $F
  cp $N/$N.gff gffs/
done
conda deactivate  # Deactivate 'prokka_env'

# Activate 'roary_env' to run Roary on the GFF files generated by Prokka
conda activate roary_env
# Run Roary with specified options on all GFF files in the 'gffs' directory
roary -f name_of_output_folder -e -n -v --mafft gffs/*.gff

# Additional steps including downloading roary_plots.py, generating a phylogenetic tree, and plotting
FastTree -nt -gtr core_gene_alignment.aln > treetrial.newick
python roary_plots.py --labels roaryresult_subset1/treetrial.newick roaryresult_subset1/gene_presence_absence.csv
conda deactivate 

# Abricate command outside of specified environments - possibly needs to be within an environment
conda activate abricate
abricate --db vfdb --csv core_gene_alignment.aln > NewVFactorsAbricate.csv
conda deactivate 

# Following are snippets for various BLAST+ operations and gene list manipulations in Python
# Displaying database information for the Swissprot database using blastdbcmd
blastdbcmd -info -db swissprot
